<!--
Project: ClipFlair (http://ClipFlair.codeplex.com)
Filename: ActivityWindow.xaml
Version: 20140901
-->

<clipflair:BaseWindow x:Class="ClipFlair.Windows.ActivityWindow"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:sdk="http://schemas.microsoft.com/winfx/2006/xaml/presentation/sdk"
  xmlns:clipflair="clr-namespace:ClipFlair.Windows;assembly=ClipFlair.Windows.Base"
  xmlns:utils="clr-namespace:System.Windows.Controls;assembly=WPF_Compatibility" 
  xmlns:local="clr-namespace:ClipFlair.Windows"
  mc:Ignorable="d"
                    
  ShowScreenshotButton="False"
  
  SizeChanged="BaseWindow_SizeChanged"
                      
  d:DesignWidth="1000" d:DesignHeight="700"
  > <!-- hiding screenshot button due to Silverlight security issue: not rendering cross-domain content to WriteableBitmap -->
  
  <clipflair:BaseWindow.Resources>
    <ResourceDictionary>
      
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/ClipFlair.Windows.Base;component/Themes/Generic.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <utils:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
      
    </ResourceDictionary>
  </clipflair:BaseWindow.Resources>

  <!--<clipflair:BaseWindow.FrontContent>-->

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*"/>
    </Grid.ColumnDefinitions>

    <local:ActivityContainer x:Name="activity"
      Grid.Row="0" Grid.Column="0"
      LoadURLClick="activity_LoadURLClick"
      LoadClick="activity_LoadClick"
      SaveClick="activity_SaveClick"
      />
      <!-- don't bind any properties of ActivityContainer to our view, since ActivityWindow reuses the view of ActivityContainer -->

    <!-- Install -->
    <sdk:Label
      Name="lblInstall" 
      Grid.Row="0" Grid.Column="0" 
      HorizontalAlignment="Right" VerticalAlignment="Bottom" 
      Margin="0,0,40,1"
      FontWeight="ExtraBold" 
      FontStretch="UltraExpanded"
      Foreground="#909A15"
      Content="install"
      Cursor="Hand"
      MouseLeftButtonDown="lblInstall_MouseLeftButtonDown"
      ToolTipService.ToolTip="Install for Out-Of-Browser (OOB) use"
      Visibility="{Binding IsShowingInstall, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ActivityWindow}, Converter={StaticResource BooleanToVisibilityConverter}}"
      />

  </Grid>

  <!--</clipflair:BaseWindow.FrontContent>-->

  <clipflair:BaseWindow.PropertyItems>

    <!-- SourceURL -->
    
    <!--
    <StackPanel Orientation="Vertical">
      <sdk:Label Style="{StaticResource PropertyLabelStyle}" Content="Source URL:" Target="{Binding ElementName=edSourceURL}" />
      <TextBox Name="edSourceURL" Text="{Binding Path=Source, Mode=TwoWay}" />
    </StackPanel>
    -->

    <!-- Time -->
    
    <StackPanel Orientation="Vertical">
      <sdk:Label Style="{StaticResource PropertyLabelStyle}" Content="Time:" Target="{Binding ElementName=edTime}" />
      <TextBox Name="edTime" Text="{Binding Time, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True}" />
    </StackPanel>
    
    <!-- ViewPosition -->
    
    <!--
    <StackPanel Orientation="Vertical">
      <sdk:Label Style="{StaticResource PropertyLabelStyle}" Content="View Position:" Target="{Binding ElementName=edViewPosition}" />
      <TextBox Name="edViewPosition" Text="{Binding ViewPosition, Mode=TwoWay}" />
    </StackPanel>
    -->
    
    <!-- ViewWidth -->
    
    <StackPanel Orientation="Vertical">
      <sdk:Label Style="{StaticResource PropertyLabelStyle}" Content="View Width:" Target="{Binding ElementName=edViewWidth}" />
      <TextBox Name="edViewWidth" Text="{Binding ViewWidth, Mode=TwoWay}" IsReadOnly="True" />
    </StackPanel>

    <!-- ViewHeight -->
    
    <StackPanel Orientation="Vertical">
      <sdk:Label Style="{StaticResource PropertyLabelStyle}" Content="View Height:" Target="{Binding ElementName=edViewHeight}" />
      <TextBox Name="edViewHeight" Text="{Binding ViewHeight, Mode=TwoWay}" IsReadOnly="True" />
    </StackPanel>

    <!-- ContentZoom -->
    
    <StackPanel Orientation="Vertical">
      <sdk:Label Style="{StaticResource PropertyLabelStyle}" Content="Content Zoom:" Target="{Binding ElementName=sldContentZoom}" />
      <TextBox Name="edContentZoom" Text="{Binding ContentZoom, Mode=TwoWay, ValidatesOnExceptions=True, NotifyOnValidationError=True}"/>
      <Slider Name="sldContentZoom" Minimum="0.3" Maximum="3" SmallChange="0.1" LargeChange="0.5" Value="{Binding ContentZoom, Mode=TwoWay}"/>
    </StackPanel>

    <!-- ContentZoomable -->
    
    <StackPanel Orientation="Horizontal">
      <CheckBox Name="cbContentZoomable" IsChecked="{Binding ContentZoomable, Mode=TwoWay}" />
      <sdk:Label Style="{StaticResource PropertyLabelStyle}" Content="Content Zoomable" Target="{Binding ElementName=cbContentZoomable}"/>
    </StackPanel>

    <!-- ContentZoomToFit -->
    
    <StackPanel Orientation="Horizontal">
      <CheckBox Name="cbContentZoomToFit" IsChecked="{Binding ContentZoomToFit, Mode=TwoWay}" />
      <sdk:Label Style="{StaticResource PropertyLabelStyle}" Content="Content Zoom to Fit" Target="{Binding ElementName=cbContentZoomToFit}"/>
    </StackPanel>
    
    <!-- ContentPartsConfigurable -->
    
    <StackPanel Orientation="Horizontal">
      <CheckBox Name="cbContentPartsConfigurable" IsChecked="{Binding ContentPartsConfigurable, Mode=TwoWay}" />
      <sdk:Label Style="{StaticResource PropertyLabelStyle}" Content="Options Button Visible (at Components)" Target="{Binding ElementName=cbContentPartsConfigurable}"/>
    </StackPanel>

    <!-- IconbarVisible -->

    <StackPanel Orientation="Horizontal">
      <CheckBox
        Name="cbIconbarVisible"
        IsChecked="{Binding IconbarVisible, Mode=TwoWay}"
        />
      <sdk:Label
        Style="{StaticResource PropertyLabelStyle}"
        Content="Iconbar Visible"
        Target="{Binding ElementName=cbIconbarVisible}"
        />
    </StackPanel>

    <!-- ToolbarVisible -->
    
    <StackPanel Orientation="Horizontal">
      <CheckBox
        Name="cbToolbarVisible"
        IsChecked="{Binding ToolbarVisible, Mode=TwoWay}"
        />
      <sdk:Label
        Style="{StaticResource PropertyLabelStyle}"
        Content="Toolbar Visible"
        Target="{Binding ElementName=cbToolbarVisible}"
        />
    </StackPanel>

    <!-- ToolbarOrientation -->
    <!-- TODO: DOESN'T SEEM TO WORK    
    <StackPanel Orientation="Horizontal">
      <sdk:Label
        Style="{StaticResource PropertyLabelStyle}"
        Content="Toolbar Orientation: " 
        Target="{Binding ElementName=comboToolbarOrientation}"
        />
      <ComboBox
        Name="comboToolbarOrientation"
        SelectedValuePath="Tag"
        SelectedValue="{Binding ToolbarOrientation, Mode=TwoWay}"
        >
        <ComboBox.Items>
          <ComboBoxItem Tag="Horizontal">Horizontal</ComboBoxItem>
          <ComboBoxItem Tag="Vertical">Vertical</ComboBoxItem>
        </ComboBox.Items>
      </ComboBox>
    </StackPanel>
    -->
  
  </clipflair:BaseWindow.PropertyItems>

</clipflair:BaseWindow>
