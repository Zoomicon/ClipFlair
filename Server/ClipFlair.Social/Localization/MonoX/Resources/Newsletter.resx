<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Button_Subscribe" xml:space="preserve">
    <value>Subscribe</value>
  </data>
  <data name="Button_Unsubscribe" xml:space="preserve">
    <value>Unsubscribe</value>
  </data>
  <data name="ErrorMessage_NewsletterUnsubscription" xml:space="preserve">
    <value>There is a problem with your newsletter unsubscription link. Either you have already unsubscribed from the {0} newsletter or perhaps  you've copied and pasted it in your browser, then please make sure that it is identical to the link you've got in the newsletter unsubscription e-mail. If you clicked on it or you are sure you copied/pasted it correctly and it still doesn't work, then please contact our support.</value>
  </data>
  <data name="NotSent" xml:space="preserve">
    <value>Not sent</value>
  </data>
  <data name="Sending" xml:space="preserve">
    <value>Sending newsletter...</value>
  </data>
  <data name="SendingTest" xml:space="preserve">
    <value>Sending test newletter...</value>
  </data>
  <data name="Sent" xml:space="preserve">
    <value>Newsletter sent</value>
  </data>
  <data name="SentWithErrors" xml:space="preserve">
    <value>Newsletter sent with errors</value>
  </data>
  <data name="Subscription_Description" xml:space="preserve">
    <value>Please check the newsletter you want to subscribe to.</value>
  </data>
  <data name="Subscription_Success_Message" xml:space="preserve">
    <value>You have successfully subscribed to the {0} newsletter.</value>
  </data>
  <data name="Subscription_Title" xml:space="preserve">
    <value>Newsletter subscription</value>
  </data>
  <data name="TestSent" xml:space="preserve">
    <value>Test newsletter sent</value>
  </data>
  <data name="UndefinedRoles_Message" xml:space="preserve">
    <value>Please define the list of newsletter roles that user can subscribe to.</value>
  </data>
  <data name="UnloggedUser_Message" xml:space="preserve">
    <value>In order to subscribe to the newsletter you need to register or to log in.</value>
  </data>
  <data name="Unsubcription_MailTemplate_Message" xml:space="preserve">
    <value>Dear {0}, please click on the following link if you would like to unsubscribe from the newsletter. </value>
  </data>
  <data name="Unsubscription_Description" xml:space="preserve">
    <value>Please check the newsletter you want to unsubscribe to.</value>
  </data>
  <data name="Unsubscription_MailTemplate_Tooltip" xml:space="preserve">
    <value>Click here to unsubscribe from the {0} newsletter.</value>
  </data>
  <data name="Unsubscription_Mail_Subject" xml:space="preserve">
    <value>Newsletter unsubscription</value>
  </data>
  <data name="Unsubscription_Success_Message" xml:space="preserve">
    <value>You have successfully unsubscribed from the {0} newsletter.</value>
  </data>
  <data name="Unubscription_Title" xml:space="preserve">
    <value>Newsletter unsubscription</value>
  </data>
</root>